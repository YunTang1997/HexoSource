<% function avatar() {
    const avatar = get_config_from_obj(widget, 'avatar');
    const gravatar_email = get_config_from_obj(widget, 'gravatar');
    if (gravatar_email !== null) {
        return gravatar(gravatar_email, 128);
    }
    if (avatar !== null) {
        return url_for(avatar)
    }
    return url_for('images/avatar.png');
} %>
<div class="card widget">
    <div class="card-content">
        <nav class="level">
            <div class="level-item has-text-centered">
                <div>
                    <img class="image is-128x128 has-mb-6" src="<%= avatar() %>" alt="<%= get_config_from_obj(widget, 'author') %>">
                    <% if (get_config_from_obj(widget, 'author')) { %>
                    <p class="is-size-4 is-block">
                        <%= get_config_from_obj(widget, 'author') %>
                    </p>
                    <% } %>
                    <% if (get_config_from_obj(widget, 'author_title')) { %>
                    <p class="is-size-6 is-block">
                        <%= get_config_from_obj(widget, 'author_title') %>
                    </p>
                    <% } %>
                    <% if (get_config_from_obj(widget, 'location')) { %>
                    <p class="is-size-6 is-flex is-flex-center has-text-grey">
                        <i class="fas fa-map-marker-alt has-mr-7"></i>
                        <span><%= get_config_from_obj(widget, 'location') %></span>
                    </p>
                    <% } %>
                </div>
            </div>
        </nav>
        <nav class="level is-mobile">
            <div class="level-item has-text-centered is-marginless">
                <div>
                    <p class="heading">
                        <%= _p('common.post', post_count()) %>
                    </p>
                    <p class="title has-text-weight-normal">
                        <%= post_count() %>
                    </p>
                </div>
            </div>
            <div class="level-item has-text-centered is-marginless">
                <div>
                    <p class="heading">
                        <%= _p('common.category', category_count()) %>
                    </p>
                    <p class="title has-text-weight-normal">
                        <%= category_count() %>
                    </p>
                </div>
            </div>
            <div class="level-item has-text-centered is-marginless">
                <div>
                    <p class="heading">
                        <%= _p('common.tag', tag_count()) %>
                    </p>
                    <p class="title has-text-weight-normal">
                        <%= tag_count() %>
                    </p>
                </div>
            </div>
        </nav>
        <div class="level">
            <a class="level-item button is-link is-rounded" href="<%= url_for(widget.follow_link) %>">
                <%= __('widget.follow') %></a>
        </div>
        <% const socialLinks = get_config_from_obj(widget, 'social_links'); %>
        <% if (socialLinks !== null) { %>
        <div class="level is-mobile">
            <% for (let name in socialLinks) {
                    let link = socialLinks[name]; %>
            <a class="level-item button is-white is-marginless" target="_blank"
                title="<%= name %>" href="<%= url_for(typeof(link) === 'string' ? link : link.url) %>">
                <% if (typeof(link) === 'string') { %>
                <%= name %>
                <% } else { %>
                <i class="<%= link.icon %>"></i>
                <% } %>
            </a>
            <% } %>
        </div>
        <% } %>
    </div>
    <div style="margin-left:auto;margin-right:auto;">
        <hr>
        <p id="hitokoto"></p>
        <script type="text/javascript" defer="">
            function getYiyan(){
            $.getJSON("https://v1.hitokoto.cn/", function (data) {
            if(data){
                $('#hitokoto').html("");
                $('#hitokoto').append("<strong style='color: #3273dc;'>"+data.hitokoto+"</strong>"+
                "<p>"+"来源《"+data.from+"》</p><p>提供者-"+data.creator+"</p>");
            }});}
            $(function (){getYiyan();$('#hitokoto').click(function(){getYiyan();})});
        </script>
    </div>
    <div align="center" style="margin-bottom: 10px;">
        <div id="binft" align="center" style="margin:5px;"></div>
        <script>
                    var binft = function (r) {
                      function t() {
                        return b[Math.floor(Math.random() * b.length)]
                      }  
                      function e() {
                        return String.fromCharCode(94 * Math.random() + 33)
                      }
                      function n(r) {
                        for (var n = document.createDocumentFragment(), i = 0; r > i; i++) {
                          var l = document.createElement("span");
                          l.textContent = e(), l.style.color = t(), n.appendChild(l)
                        }
                        return n
                      }
                      function i() {
                        var t = o[c.skillI];
                        c.step ? c.step-- : (c.step = g, c.prefixP < l.length ? (c.prefixP >= 0 && (c.text += l[c.prefixP]), c.prefixP++) : "forward" === c.direction ? c.skillP < t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = "backward", c.delay = a) : c.skillP > 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = "forward")), r.textContent = c.text, r.appendChild(n(c.prefixP < l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)
                      }
                      var l = "",
                      o = ["Hello!", "你好呀，陌生人！", "今天你开心了吗？", "人非圣贤，孰能无过。", "不要轻易抱怨", "抱怨只能说明自己能力不足。", "自律是最好的老师。", "每天学一点，菜鸟变大神。","怠惰是贫穷的制造厂。","忍耐力较诸脑力，尤胜一筹。","环境不会改变，解决之道在于改变自己。"].map(function (r) {
                      return r + ""
                      }),
                      a = 2,
                      g = 1,
                      s = 5,
                      d = 75,
                      b = ["rgb(110,64,170)", "rgb(150,61,179)", "rgb(191,60,175)", "rgb(228,65,157)", "rgb(254,75,131)", "rgb(255,94,99)", "rgb(255,120,71)", "rgb(251,150,51)", "rgb(226,183,47)", "rgb(198,214,60)", "rgb(175,240,91)", "rgb(127,246,88)", "rgb(82,246,103)", "rgb(48,239,130)", "rgb(29,223,163)", "rgb(26,199,194)", "rgb(35,171,216)", "rgb(54,140,225)", "rgb(76,110,219)", "rgb(96,84,200)"],
                      c = {
                        text: "",
                        prefixP: -s,
                        skillI: 0,
                        skillP: 0,
                        direction: "forward",
                        delay: a,
                        step: g
                      };
                      i()
                      };
                      binft(document.getElementById('binft'));
        </script>
    </div>

</div>